#!/usr/bin/env python
##########################################################
# HyperClock v3.0 by level6
# https://github.com/lleevveell66/HyperClock
# - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# This program will make a full-screened clock with astral
# and weather data on your Raspberry Pi screen.
##########################################################

import os, pygame, time, datetime, random, sys, urllib, re, subprocess, syslog
import HyperConfig, GetAstralData

from pygame.locals import *
from datetime import datetime
from xml.dom import minidom
from xml.dom.minidom import Document
from subprocess import call

def BuildRGBA(colorlist):
	red, green, blue = colorlist.split(',')
	red=int(red)
	green=int(green)
	blue=int(blue)
	return pygame.Color(red, green, blue)

pygame.init()
pygame.font.init()
pygame.mixer.init()
pygame.mouse.set_visible(False)

myscreen=pygame.display.set_mode((0,0),pygame.FULLSCREEN|pygame.NOFRAME)
myDisplayInfo=pygame.display.Info()
print "Current Resolution: %s x %s\n" % (myDisplayInfo.current_w,myDisplayInfo.current_h)
syslog.syslog(syslog.LOG_INFO,"Current Resolution: %s x %s\n" % (myDisplayInfo.current_w,myDisplayInfo.current_h))
minX=0
maxX=myDisplayInfo.current_w
midX=int(maxX/2)
minY=0
maxY=myDisplayInfo.current_h
midY=int(maxY/2)

def getCurrentData():
	doc=Document()
	doc=minidom.parse(HyperConfig.cfg_AstralDataFile)

	astral=doc.getElementsByTagName("astral")[0]
	weather=doc.getElementsByTagName("weather")[0]
	current=doc.getElementsByTagName("current")[0]
	day0=doc.getElementsByTagName("day0")[0]
	day1=doc.getElementsByTagName("day1")[0]
	day2=doc.getElementsByTagName("day2")[0]
	day3=doc.getElementsByTagName("day3")[0]
	day4=doc.getElementsByTagName("day4")[0]
	now=doc.getElementsByTagName("now")[0]

	unicodeArrows={
		'W': u'\u2190',
		'N': u'\u2191',
		'E': u'\u2192',
		'S': u'\u2193',
		'NW': u'\u2196',
		'NE': u'\u2197',
		'SE': u'\u2198',
		'SW': u'\u2199',
		'NONE': u'\u2022'
	}

	winddirdeg=int(current.getAttribute("winddirection"))
	winddirection="N"
	if(winddirdeg>22):
		winddirection=unicodeArrows['N']
	if(winddirdeg>67):
		winddirection=unicodeArrows['E']
	if(winddirdeg>112):
		winddirection=unicodeArrows['SE']
	if(winddirdeg>158):
		winddirection=unicodeArrows['S']
	if(winddirdeg>202):
		winddirection=unicodeArrows['SW']
	if(winddirdeg>248):
		winddirection=unicodeArrows['W']
	if(winddirdeg>292):
		winddirection=unicodeArrows['NW']
	if(winddirdeg>338):
		winddirection=unicodeArrows['N']

	rising="?"
	risingnum=int(current.getAttribute("rising"))
	if(risingnum==0):
		rising=unicodeArrows['NONE']
	if(risingnum==1):
		rising=unicodeArrows['N']
	if(risingnum==2):
		rising=unicodeArrows['S']

#base_dir = '/sys/bus/w1/devices/'
#device_folder = glob.glob(base_dir + '28*')[0]
	itempfile=HyperConfig.cfg_IndoorTempFile

	f=open(itempfile,'r')
	itemp=f.read()
	itemp=itemp[:-1]
	f.close()

	return {
		'moonphase': astral.attributes["moonphase"].value,
		'moonphasenum': astral.attributes["moonphasenum"].value,
		'sunrise': astral.attributes["sunrise"].value,
		'sunset': astral.getAttribute("sunset"),
		'code': current.getAttribute("code"),
		'condition': current.getAttribute("condition"),
		'humidity': current.getAttribute("humidity"),
		'pressure': current.getAttribute("pressure"),
		'rising': rising,
		'indoor': itemp,
		'temp': current.getAttribute("temp"),
		'windchill': current.getAttribute("windchill"),
		'winddirection': winddirection,
		'windspeed': current.getAttribute("windspeed"),
		'high': day0.getAttribute("high"),
		'low': day0.getAttribute("low"),
		'day1code': day1.getAttribute("code"),
		'day1condition': day1.getAttribute("condition"),
		'day1day': day1.getAttribute("day"),
		'day1high': day1.getAttribute("high"),
		'day1low': day1.getAttribute("low"),
		'day2code': day2.getAttribute("code"),
		'day2condition': day2.getAttribute("condition"),
		'day2day': day2.getAttribute("day"),
		'day2high': day2.getAttribute("high"),
		'day2low': day2.getAttribute("low"),
		'day3code': day3.getAttribute("code"),
		'day3condition': day3.getAttribute("condition"),
		'day3day': day3.getAttribute("day"),
		'day3high': day3.getAttribute("high"),
		'day3low': day3.getAttribute("low"),
		'day4code': day4.getAttribute("code"),
		'day4condition': day4.getAttribute("condition"),
		'day4day': day4.getAttribute("day"),
		'day4high': day4.getAttribute("high"),
		'day4low': day4.getAttribute("low"),
		'lastdate': now.getAttribute("date"),
		'lasttime': now.getAttribute("time")
}

def getAstralData():
	result=re.match("standalone",HyperConfig.cfg_Topology,flags=re.I)
	if(result == None):
		astralDataCmd=HyperConfig.cfg_AstralDataCommand
		call(astralDataCmd,shell=True)

	else:
		GetAstralData.downloadAndWriteWeather(HyperConfig.cfg_woeid)

def getIndoorTemp():
	iTempCmd=HyperConfig.cfg_IndoorTempCommand
	call(iTempCmd,shell=True)


getAstralData()
getIndoorTemp()
currentData=getCurrentData()


while True:
	try:
		for event in pygame.event.get():
			if event.type==QUIT:
				pygame.quit()
				sys.exit()

		myscreen.fill((0,0,0))

		seconds=int(datetime.now().strftime("%s"))
		if(seconds % 2 == 0):
			currenttime=datetime.now().strftime("%I:%M %p")
		else:
			currenttime=datetime.now().strftime("%I %M %p")

		currentdate=datetime.now().strftime("%A     %m / %d / %Y")

		if(seconds % 900 == 0):
			getAstralData()
			getIndoorTemp()

		if(seconds % 30 == 0):
			currentData=getCurrentData()

		moonphase=currentData['moonphase']
		moonphasenum=currentData['moonphasenum']
		sunrise=currentData['sunrise']
		sunset=currentData['sunset']

		# Fix what appears to be a bug in the Yahoo Weather API, whereas sunrise/sunset times do not pad with zeros for single digit times
		if(re.match(".*\d:\d .*",sunrise)):
			sunrise=re.sub(':',':0',sunrise);

		if(re.match(".*\d:\d .*",sunset)):
			sunset=re.sub(':',':0',sunset);

		code=currentData['code']
		condition=currentData['condition']
		humidity=currentData['humidity']
		pressure=currentData['pressure']
		rising=currentData['rising']
		temp=currentData['temp']
		indoor=currentData['indoor']
		windchill=currentData['windchill']
		winddirection=currentData['winddirection']
		windspeed=currentData['windspeed']
		high=currentData['high']
		low=currentData['low']
		day1code=currentData['day1code']
		day1condition=currentData['day1condition']
		day1day=currentData['day1day']
		day1high=currentData['day1high']
		day1low=currentData['day1low']
		day2code=currentData['day2code']
		day2condition=currentData['day2condition']
		day2day=currentData['day2day']
		day2high=currentData['day2high']
		day2low=currentData['day2low']
		day3code=currentData['day3code']
		day3condition=currentData['day3condition']
		day3day=currentData['day3day']
		day3high=currentData['day3high']
		day3low=currentData['day3low']
		day4code=currentData['day4code']
		day4condition=currentData['day4condition']
		day4day=currentData['day4day']
		day4high=currentData['day4high']
		day4low=currentData['day4low']
		lastdate=currentData['lastdate']
		lasttime=currentData['lasttime']

		last='(Last update: '+lastdate+' '+lasttime+')'

		currenttemp=temp+'F'
		currentitemp='Indoor: '+str(indoor)+'F'
		currenthigh=high
		currentlow=low
		currentweather=condition
		day1weather=day1day+' '+day1high+'F/'+day1low+'F'
		day2weather=day2day+' '+day2high+'F/'+day2low+'F'
		day3weather=day3day+' '+day3high+'F/'+day3low+'F'
		day4weather=day4day+' '+day4high+'F/'+day4low+'F'

		timesize=int(.20*maxX)
		datesize=int(.06*maxX)
		weathersize=int(.06*maxX)
		tempsize=int(.07*maxX)
		itempsize=int(.03*maxX)
		highsize=int(.03*maxX)
		lowsize=int(.03*maxX)
		forecastsize=int(.02*maxX)
		windsize=int(.04*maxX)
		pressuresize=int(.04*maxX)
		humiditysize=int(.04*maxX)
		sunrisesetsize=int(.02*maxX)
		lastsize=int(.02*maxX)

		timefont=pygame.font.Font(HyperConfig.cfg_timefont,timesize)
		datefont=pygame.font.Font(HyperConfig.cfg_datefont,datesize)
		weatherfont=pygame.font.Font(HyperConfig.cfg_weatherfont,weathersize)
		tempfont=pygame.font.Font(HyperConfig.cfg_tempfont,tempsize)
		itempfont=pygame.font.Font(HyperConfig.cfg_itempfont,itempsize)
		highfont=pygame.font.Font(HyperConfig.cfg_highfont,highsize)
		lowfont=pygame.font.Font(HyperConfig.cfg_lowfont,lowsize)
		forecastfont=pygame.font.Font(HyperConfig.cfg_forecastfont,forecastsize)
		windfont=pygame.font.Font(HyperConfig.cfg_windfont,windsize)
		pressurefont=pygame.font.Font(HyperConfig.cfg_pressurefont,pressuresize)
		humidityfont=pygame.font.Font(HyperConfig.cfg_humidityfont,humiditysize)
		sunrisesetfont=pygame.font.Font(HyperConfig.cfg_sunrisesetfont,sunrisesetsize)
		lastfont=pygame.font.Font(HyperConfig.cfg_lastfont,lastsize)

		timetext=timefont.render(currenttime,True,BuildRGBA(HyperConfig.cfg_timecolor))
		datetext=datefont.render(currentdate,True,BuildRGBA(HyperConfig.cfg_datecolor))
		weathertext=weatherfont.render(currentweather,True,BuildRGBA(HyperConfig.cfg_weathercolor))
		temptext=tempfont.render(currenttemp,True,BuildRGBA(HyperConfig.cfg_tempcolor))
		itemptext=itempfont.render(currentitemp,True,BuildRGBA(HyperConfig.cfg_itempcolor))
		hightext=highfont.render(currenthigh,True,BuildRGBA(HyperConfig.cfg_highcolor))
		lowtext=lowfont.render(currentlow,True,BuildRGBA(HyperConfig.cfg_lowcolor))
		windtext=windfont.render(winddirection+' '+windspeed+'mph',True,BuildRGBA(HyperConfig.cfg_windcolor))
		pressuretext=windfont.render(pressure+' '+rising,True,BuildRGBA(HyperConfig.cfg_pressurecolor))
		humiditytext=windfont.render(humidity+'%',True,BuildRGBA(HyperConfig.cfg_humiditycolor))
		day1text=forecastfont.render(day1weather,True,BuildRGBA(HyperConfig.cfg_day1color))
		day2text=forecastfont.render(day2weather,True,BuildRGBA(HyperConfig.cfg_day2color))
		day3text=forecastfont.render(day3weather,True,BuildRGBA(HyperConfig.cfg_day3color))
		day4text=forecastfont.render(day4weather,True,BuildRGBA(HyperConfig.cfg_day4color))
		sunrisetext=sunrisesetfont.render(sunrise,True,BuildRGBA(HyperConfig.cfg_sunrisecolor))
		sunsettext=sunrisesetfont.render(sunset,True,BuildRGBA(HyperConfig.cfg_sunsetcolor))
		lasttext=lastfont.render(last,True,BuildRGBA(HyperConfig.cfg_lastcolor))

		timetext_rect=timetext.get_rect()
		datetext_rect=datetext.get_rect()
		weathertext_rect=weathertext.get_rect()
		temptext_rect=temptext.get_rect()
		itemptext_rect=itemptext.get_rect()
		hightext_rect=hightext.get_rect()
		lowtext_rect=lowtext.get_rect()
		windtext_rect=windtext.get_rect()
		pressuretext_rect=pressuretext.get_rect()
		humiditytext_rect=humiditytext.get_rect()
		day1text_rect=day1text.get_rect()
		day2text_rect=day2text.get_rect()
		day3text_rect=day3text.get_rect()
		day4text_rect=day4text.get_rect()
		sunrisetext_rect=sunrisetext.get_rect()
		sunsettext_rect=sunsettext.get_rect()
		lasttext_rect=lasttext.get_rect()

		filename='/usr/local/HyperClock/images/'+str(code)+'.png'
		currentimg=pygame.image.load(filename)
		currentimg=pygame.transform.scale(currentimg,(int(.18*maxX),int(.18*maxX)))
		currentimg_pos=currentimg.get_rect(topright=(midX+(int(.04*maxX)),midY-(int(.05*maxY))))

		timetext_pos=timetext.get_rect(center=(midX,0+(timesize/2)))
		datetext_pos=datetext.get_rect(center=(midX,0+timesize+datesize/2))
		weathertext_pos=weathertext.get_rect(midbottom=(midX,maxY-forecastsize-int(.30*maxY)))
		temptext_pos=temptext.get_rect(midright=(midX-(int(.16*maxX)),midY+int(.10*maxY)))
		itemptext_pos=itemptext.get_rect(midright=(midX-(int(.13*maxX)),midY+int(.17*maxY)+(itempsize/2)))
		hightext_pos=hightext.get_rect(midright=(midX-int(.13*maxX),midY+int(.08*maxY)-(highsize/2)))
		lowtext_pos=lowtext.get_rect(midright=(midX-int(.13*maxX),midY+int(.11*maxY)+(lowsize/2)))
		windtext_pos=windtext.get_rect(topleft=(midX+int(.04*maxX),midY))
		pressuretext_pos=pressuretext.get_rect(topleft=(midX+int(.04*maxX),midY+windsize))
		humiditytext_pos=humiditytext.get_rect(topleft=(midX+int(.04*maxX),midY+windsize+pressuresize))
		day1text_pos=day1text.get_rect(midbottom=(minX+int(.18*maxX),maxY))
		day2text_pos=day2text.get_rect(midbottom=((midX/2)+int(.15*maxX),maxY))
		day3text_pos=day3text.get_rect(midbottom=(midX+(midX/2)-int(.15*maxX),maxY))
		day4text_pos=day4text.get_rect(midbottom=(maxX-int(.18*maxX),maxY))
		sunrisetext_pos=sunrisetext.get_rect(midtop=(minX+int(.11*maxX),midY-int(.01*maxX)))
		sunsettext_pos=sunsettext.get_rect(midbottom=(minX+int(.11*maxX),midY+int(.13*maxX)))
		lasttext_pos=lasttext.get_rect(midtop=(midX,midY+windsize+pressuresize+humiditysize+int(.01*maxX)))

		filename='/usr/local/HyperClock/images/'+str(day1code)+'.png'
		day1img=pygame.image.load(filename)
		day1img=pygame.transform.scale(day1img,(int(.09*maxX),int(.09*maxX)))
		day1img_pos=day1img.get_rect(midbottom=(minX+int(.18*maxX),maxY-int(.03*maxY)))

		filename='/usr/local/HyperClock/images/'+str(day2code)+'.png'
		day2img=pygame.image.load(filename)
		day2img=pygame.transform.scale(day2img,(int(.09*maxX),int(.09*maxX)))
		day2img_pos=day2img.get_rect(midbottom=((midX/2)+int(.15*maxX),maxY-int(.03*maxY)))

		filename='/usr/local/HyperClock/images/'+str(day3code)+'.png'
		day3img=pygame.image.load(filename)
		day3img=pygame.transform.scale(day3img,(int(.09*maxX),int(.09*maxX)))
		day3img_pos=day3img.get_rect(midbottom=(midX+(midX/2)-int(.15*maxX),maxY-int(.03*maxY)))

		filename='/usr/local/HyperClock/images/'+str(day4code)+'.png'
		day4img=pygame.image.load(filename)
		day4img=pygame.transform.scale(day4img,(int(.09*maxX),int(.09*maxX)))
		day4img_pos=day4img.get_rect(midbottom=(maxX-int(.18*maxX),maxY-int(.03*maxY)))

		filename='/usr/local/HyperClock/images/sunriseset.png'
		sunrisesetimg=pygame.image.load(filename)
		sunrisesetimg=pygame.transform.scale(sunrisesetimg,(int(.09*maxX),int(.09*maxX)))
		sunrisesetimg_pos=sunrisesetimg.get_rect(center=(minX+int(.11*maxX),midY+int(.10*maxY)))

		filename='/usr/local/HyperClock/images/moon/'+moonphasenum+'.png'
		moonimg=pygame.image.load(filename)
		moonimg=pygame.transform.scale(moonimg,(int(.09*maxX),int(.09*maxX)))
		moonimg_pos=moonimg.get_rect(center=(maxX-int(.11*maxX),midY+int(.10*maxY)))

		myscreen.blit(timetext,(timetext_pos))
		myscreen.blit(datetext,(datetext_pos))
#		myscreen.blit(weathertext,(weathertext_pos))
		myscreen.blit(temptext,(temptext_pos))
		if(int(indoor) != 9999):
			myscreen.blit(itemptext,(itemptext_pos))
		myscreen.blit(hightext,(hightext_pos))
		myscreen.blit(lowtext,(lowtext_pos))
		myscreen.blit(windtext,(windtext_pos))
		myscreen.blit(pressuretext,(pressuretext_pos))
		myscreen.blit(humiditytext,(humiditytext_pos))
		myscreen.blit(day1text,(day1text_pos))
		myscreen.blit(day2text,(day2text_pos))
		myscreen.blit(day3text,(day3text_pos))
		myscreen.blit(day4text,(day4text_pos))
		myscreen.blit(currentimg,(currentimg_pos))
		myscreen.blit(day1img,(day1img_pos))
		myscreen.blit(day2img,(day2img_pos))
		myscreen.blit(day3img,(day3img_pos))
		myscreen.blit(day4img,(day4img_pos))
		myscreen.blit(sunrisesetimg,(sunrisesetimg_pos))
		myscreen.blit(sunrisetext,(sunrisetext_pos))
		myscreen.blit(sunsettext,(sunsettext_pos))
		myscreen.blit(lasttext,(lasttext_pos))
		myscreen.blit(moonimg,(moonimg_pos))

		pygame.display.update()

#		time.sleep(1)
		pygame.display.flip()

		hours=int(datetime.now().strftime("%I"))
		minutes=int(datetime.now().strftime("%M"))
		ampm=datetime.now().strftime("%p")
#		if(seconds % 10 == 0):
		if(minutes % 60 == 0 and seconds % 60 == 0):
			timesound=pygame.mixer.Sound("/usr/local/HyperClock/audio/TheTimeIs.ogg")
			timesound.set_volume(1.0)
			playing=timesound.play()
			while playing.get_busy():
				pygame.time.delay(1)
			hoursound=pygame.mixer.Sound('/usr/local/HyperClock/audio/'+str(hours)+'.ogg')
			hoursound.set_volume(1.0)
			playing=hoursound.play()
			while playing.get_busy():
				pygame.time.delay(1)
			oclocksound=pygame.mixer.Sound('/usr/local/HyperClock/audio/oclock.ogg')
			oclocksound.set_volume(1.0)
			playing=oclocksound.play()
			while playing.get_busy():
				pygame.time.delay(1)
			ampmsound=pygame.mixer.Sound('/usr/local/HyperClock/audio/'+ampm+'.ogg')
			ampmsound.set_volume(1.0)
			playing=ampmsound.play()
			while playing.get_busy():
				pygame.time.delay(1)

	except KeyboardInterrupt:
		print "Program interrupted by keyboard.  Exiting cleanly."
		syslog.syslog(syslog.LOG_INFO,"Program interrupted by keyboard.  Exiting cleanly.")
		sys.exit()
